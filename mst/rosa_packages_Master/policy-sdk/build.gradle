apply plugin: 'com.android.library'

android {
    def sdk = rootProject.ext.sdk
    compileSdkVersion sdk.compileSdkVersion

    // 配置 sourceSets 而不使用 dependencies 的原因：
    //   - 需要将 ../policy-commons/src/main/java 打包到 policy.aar 中
    //   - 使用 implementation project(':policy-commons') 不会打包进去
    //   - 目前没有研究比较好的方式
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', '../policy-commons/src/main/java']
        }
    }

    defaultConfig {
        minSdkVersion sdk.minSdkVersion
        targetSdkVersion sdk.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(':master-sdk')
//    implementation project(':policy-commons') 不依赖 policy-commons 的原因，见上述配置 sourceSets 的原因

    implementation project(':component')
    def deps = rootProject.ext.deps
    implementation deps.appcompat

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation deps.junit
    androidTestImplementation deps.espressoCore
    androidTestImplementation deps.runner
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.ubtrobot.master'
            artifactId 'policy'
            version rootProject.ext.versions.policySdkVersion

            artifact("build/outputs/aar/policy-sdk-release.aar")
        }
    }
}

artifactory {
    contextUrl = artifactory_url

    publish {
        repository {
            username = artifactory_username
            password = artifactory_password

            if (rootProject.ext.versions.sdkVersion.toUpperCase().endsWith("-SNAPSHOT")) {
                repoKey = artifactory_rose_snapshot
            } else {
                repoKey = artifactory_rose_release
            }
        }

        defaults {
            publications('mavenJava')
            publishArtifacts = true
        }
    }

    resolve {
        repoKey = 'jcenter'
    }
}